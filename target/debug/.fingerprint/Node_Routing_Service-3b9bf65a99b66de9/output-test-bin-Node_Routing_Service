{"$message_type":"diagnostic","message":"unresolved import `serde`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\routes\\routing_service.rs","byte_start":193,"byte_end":198,"line_start":9,"line_end":9,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"use serde::Deserialize;","highlight_start":5,"highlight_end":10}],"label":"use of undeclared crate or module `serde`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `serde`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\routes\\routing_service.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse serde::Deserialize;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `serde`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::collections::HashMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\routes\\routing_service.rs","byte_start":218,"byte_end":243,"line_start":10,"line_end":10,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\routes\\routing_service.rs","byte_start":214,"byte_end":246,"line_start":10,"line_end":11,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":1,"highlight_end":31},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::collections::HashMap`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\routes\\routing_service.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::HashMap;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`match` arms have incompatible types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src\\routes\\routing_service.rs","byte_start":1224,"byte_end":1304,"line_start":42,"line_end":42,"column_start":18,"column_end":98,"is_primary":true,"text":[{"text":"            _ => (StatusCode::BAD_REQUEST, \"Invalid or missing method parameter\").into_response(),","highlight_start":18,"highlight_end":98}],"label":"expected `Json<String>`, found `Response<Body>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\routes\\routing_service.rs","byte_start":842,"byte_end":908,"line_start":38,"line_end":38,"column_start":28,"column_end":94,"is_primary":false,"text":[{"text":"            Some(\"GET\") => Json(format!(\"GET request received with data: {:?}\", params.data)),","highlight_start":28,"highlight_end":94}],"label":"this is found to be of type `axum::Json<String>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\routes\\routing_service.rs","byte_start":939,"byte_end":1006,"line_start":39,"line_end":39,"column_start":29,"column_end":96,"is_primary":false,"text":[{"text":"            Some(\"POST\") => Json(format!(\"POST request received with data: {:?}\", params.data)),","highlight_start":29,"highlight_end":96}],"label":"this is found to be of type `axum::Json<String>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\routes\\routing_service.rs","byte_start":1036,"byte_end":1102,"line_start":40,"line_end":40,"column_start":28,"column_end":94,"is_primary":false,"text":[{"text":"            Some(\"PUT\") => Json(format!(\"PUT request received with data: {:?}\", params.data)),","highlight_start":28,"highlight_end":94}],"label":"this is found to be of type `axum::Json<String>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\routes\\routing_service.rs","byte_start":1135,"byte_end":1204,"line_start":41,"line_end":41,"column_start":31,"column_end":100,"is_primary":false,"text":[{"text":"            Some(\"DELETE\") => Json(format!(\"DELETE request received with data: {:?}\", params.data)),","highlight_start":31,"highlight_end":100}],"label":"this is found to be of type `axum::Json<String>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\routes\\routing_service.rs","byte_start":781,"byte_end":1316,"line_start":37,"line_end":43,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        match params.method.as_deref() {","highlight_start":9,"highlight_end":41},{"text":"            Some(\"GET\") => Json(format!(\"GET request received with data: {:?}\", params.data)),","highlight_start":1,"highlight_end":95},{"text":"            Some(\"POST\") => Json(format!(\"POST request received with data: {:?}\", params.data)),","highlight_start":1,"highlight_end":97},{"text":"            Some(\"PUT\") => Json(format!(\"PUT request received with data: {:?}\", params.data)),","highlight_start":1,"highlight_end":95},{"text":"            Some(\"DELETE\") => Json(format!(\"DELETE request received with data: {:?}\", params.data)),","highlight_start":1,"highlight_end":101},{"text":"            _ => (StatusCode::BAD_REQUEST, \"Invalid or missing method parameter\").into_response(),","highlight_start":1,"highlight_end":99},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":"`match` arms have incompatible types","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `axum::Json<String>`\n   found struct `Response<Body>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"you could change the return type to be a boxed trait object","code":null,"level":"help","spans":[{"file_name":"src\\routes\\routing_service.rs","byte_start":752,"byte_end":756,"line_start":36,"line_end":36,"column_start":70,"column_end":74,"is_primary":true,"text":[{"text":"    async fn dynamic_handler(Query(params): Query<RequestParams>) -> impl IntoResponse {","highlight_start":70,"highlight_end":74}],"label":null,"suggested_replacement":"Box<dyn","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src\\routes\\routing_service.rs","byte_start":752,"byte_end":769,"line_start":36,"line_end":36,"column_start":70,"column_end":87,"is_primary":false,"text":[{"text":"    async fn dynamic_handler(Query(params): Query<RequestParams>) -> impl IntoResponse {","highlight_start":70,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `impl Trait`","def_site_span":{"file_name":"src\\main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\routes\\routing_service.rs","byte_start":769,"byte_end":769,"line_start":36,"line_end":36,"column_start":87,"column_end":87,"is_primary":true,"text":[{"text":"    async fn dynamic_handler(Query(params): Query<RequestParams>) -> impl IntoResponse {","highlight_start":87,"highlight_end":87}],"label":null,"suggested_replacement":">","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"src\\routes\\routing_service.rs","byte_start":752,"byte_end":769,"line_start":36,"line_end":36,"column_start":70,"column_end":87,"is_primary":false,"text":[{"text":"    async fn dynamic_handler(Query(params): Query<RequestParams>) -> impl IntoResponse {","highlight_start":70,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `impl Trait`","def_site_span":{"file_name":"src\\main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"if you change the return type to expect trait objects, box the returned expressions","code":null,"level":"help","spans":[{"file_name":"src\\routes\\routing_service.rs","byte_start":842,"byte_end":842,"line_start":38,"line_end":38,"column_start":28,"column_end":28,"is_primary":true,"text":[{"text":"            Some(\"GET\") => Json(format!(\"GET request received with data: {:?}\", params.data)),","highlight_start":28,"highlight_end":28}],"label":null,"suggested_replacement":"Box::new(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\routes\\routing_service.rs","byte_start":939,"byte_end":939,"line_start":39,"line_end":39,"column_start":29,"column_end":29,"is_primary":true,"text":[{"text":"            Some(\"POST\") => Json(format!(\"POST request received with data: {:?}\", params.data)),","highlight_start":29,"highlight_end":29}],"label":null,"suggested_replacement":"Box::new(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\routes\\routing_service.rs","byte_start":1036,"byte_end":1036,"line_start":40,"line_end":40,"column_start":28,"column_end":28,"is_primary":true,"text":[{"text":"            Some(\"PUT\") => Json(format!(\"PUT request received with data: {:?}\", params.data)),","highlight_start":28,"highlight_end":28}],"label":null,"suggested_replacement":"Box::new(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\routes\\routing_service.rs","byte_start":1135,"byte_end":1135,"line_start":41,"line_end":41,"column_start":31,"column_end":31,"is_primary":true,"text":[{"text":"            Some(\"DELETE\") => Json(format!(\"DELETE request received with data: {:?}\", params.data)),","highlight_start":31,"highlight_end":31}],"label":null,"suggested_replacement":"Box::new(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\routes\\routing_service.rs","byte_start":1224,"byte_end":1224,"line_start":42,"line_end":42,"column_start":18,"column_end":18,"is_primary":true,"text":[{"text":"            _ => (StatusCode::BAD_REQUEST, \"Invalid or missing method parameter\").into_response(),","highlight_start":18,"highlight_end":18}],"label":null,"suggested_replacement":"Box::new(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\routes\\routing_service.rs","byte_start":908,"byte_end":908,"line_start":38,"line_end":38,"column_start":94,"column_end":94,"is_primary":true,"text":[{"text":"            Some(\"GET\") => Json(format!(\"GET request received with data: {:?}\", params.data)),","highlight_start":94,"highlight_end":94}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\routes\\routing_service.rs","byte_start":1006,"byte_end":1006,"line_start":39,"line_end":39,"column_start":96,"column_end":96,"is_primary":true,"text":[{"text":"            Some(\"POST\") => Json(format!(\"POST request received with data: {:?}\", params.data)),","highlight_start":96,"highlight_end":96}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\routes\\routing_service.rs","byte_start":1102,"byte_end":1102,"line_start":40,"line_end":40,"column_start":94,"column_end":94,"is_primary":true,"text":[{"text":"            Some(\"PUT\") => Json(format!(\"PUT request received with data: {:?}\", params.data)),","highlight_start":94,"highlight_end":94}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\routes\\routing_service.rs","byte_start":1204,"byte_end":1204,"line_start":41,"line_end":41,"column_start":100,"column_end":100,"is_primary":true,"text":[{"text":"            Some(\"DELETE\") => Json(format!(\"DELETE request received with data: {:?}\", params.data)),","highlight_start":100,"highlight_end":100}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\routes\\routing_service.rs","byte_start":1304,"byte_end":1304,"line_start":42,"line_end":42,"column_start":98,"column_end":98,"is_primary":true,"text":[{"text":"            _ => (StatusCode::BAD_REQUEST, \"Invalid or missing method parameter\").into_response(),","highlight_start":98,"highlight_end":98}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: `match` arms have incompatible types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\routes\\routing_service.rs:42:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        match params.method.as_deref() {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Some(\"GET\") => Json(format!(\"GET request received with data: {:?}\", params.data)),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis is found to be of type `axum::Json<String>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Some(\"POST\") => Json(format!(\"POST request received with data: {:?}\", params.data)),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis is found to be of type `axum::Json<String>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Some(\"PUT\") => Json(format!(\"PUT request received with data: {:?}\", params.data)),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis is found to be of type `axum::Json<String>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Some(\"DELETE\") => Json(format!(\"DELETE request received with data: {:?}\", params.data)),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis is found to be of type `axum::Json<String>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            _ => (StatusCode::BAD_REQUEST, \"Invalid or missing method parameter\").into_response(),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Json<String>`, found `Response<Body>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`match` arms have incompatible types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected struct `\u001b[0m\u001b[0m\u001b[1m\u001b[35maxum::Json<String>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m              found struct `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResponse<Body>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you could change the return type to be a boxed trait object\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    async fn dynamic_handler(Query(params): Query<RequestParams>) -> \u001b[0m\u001b[0m\u001b[38;5;10mBox<dyn\u001b[0m\u001b[0m IntoResponse\u001b[0m\u001b[0m\u001b[38;5;10m>\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                                      \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you change the return type to expect trait objects, box the returned expressions\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m            Some(\"GET\") => \u001b[0m\u001b[0m\u001b[38;5;10mBox::new(\u001b[0m\u001b[0mJson(format!(\"GET request received with data: {:?}\", params.data))\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m            Some(\"POST\") => \u001b[0m\u001b[0m\u001b[38;5;10mBox::new(\u001b[0m\u001b[0mJson(format!(\"POST request received with data: {:?}\", params.data))\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m            Some(\"PUT\") => \u001b[0m\u001b[0m\u001b[38;5;10mBox::new(\u001b[0m\u001b[0mJson(format!(\"PUT request received with data: {:?}\", params.data))\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m            Some(\"DELETE\") => \u001b[0m\u001b[0m\u001b[38;5;10mBox::new(\u001b[0m\u001b[0mJson(format!(\"DELETE request received with data: {:?}\", params.data))\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m            _ => \u001b[0m\u001b[0m\u001b[38;5;10mBox::new(\u001b[0m\u001b[0m(StatusCode::BAD_REQUEST, \"Invalid or missing method parameter\").into_response()\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 2 previous errors; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 2 previous errors; 1 warning emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0308, E0432.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0308, E0432.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}
